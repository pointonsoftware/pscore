# Copyright (C) Pointon Software - All Rights Reserved
# Unauthorized copying of this file, via any medium is strictly prohibited
# Proprietary and confidential
# Written by Ben Ziv <pointonsoftware@gmail.com>, August 2020

# Configuration
language: cpp
compiler: gcc
dist: bionic

before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq

#stages:
  #- Static code analysis
  #- Compile
  #- unittest
  #- Profile

jobs:
  include:
    - stage  : Code analysis
      name   : CppLint
      install: skip
      script : >-
               travis_retry wget --quiet -O - https://raw.githubusercontent.com/cpplint/cpplint/master/cpplint.py |
               python - --filter=-readability/multiline_comment,-whitespace/ending_newline,-build/c++11
               --linelength=100 --recursive core orchestra mock utility
    - name   : CppCheck
      install: sudo apt-get install cppcheck
      script : >-
              cppcheck --std=c++11 --enable=warning,style,performance,portability,information
              --quiet --suppress=missingIncludeSystem --error-exitcode=1 --inline-suppr
              core orchestra mock utility -icore/domain/unittest

    - stage  : Compile
      name   : Build
      install:
              - sudo apt-get install cmake
              - sudo apt-get install -qq g++-7
              - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 90
      script : ci/ci_build.sh
      workspaces:
        create:
          name: buildws
          paths:
            - ${TRAVIS_BUILD_DIR}/build/

    - stage  : Unit Test
      name   : Test Suite
      workspaces:
        use: buildws
      script : ci/ci_unittest.sh

    - name   : Code Coverage
      workspaces:
        use: buildws
      script :
              - ci/ci_unittest.sh
              - pip install --user cpp-coveralls
              - coveralls --root . -E ".*gtest.*" -E ".*CMakeFiles.*" -E ".*.sh"

    - stage  : Profile
      name   : Gprof
      workspaces:
        use: buildws
      script : ci/ci_profiling.sh

after_success:
  - echo "Successful!"

after_failure:
  - echo "Failed!"

# Currently not used
#deploy:
#  github-token: $GITHUB_TOKEN